/*! modern-normalize | MIT License | https://github.com/sindresorhus/modern-normalize */html{box-sizing:border-box}*,::after,::before{box-sizing:inherit}:root{-moz-tab-size:4;-o-tab-size:4;tab-size:4}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}body{font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,Helvetica,Arial,sans-serif,'Apple Color Emoji','Segoe UI Emoji','Segoe UI Symbol'}hr{height:0}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:SFMono-Regular,Consolas,'Liberation Mono',Menlo,Courier,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{padding:0}progress{vertical-align:baseline}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}code[class*=language-],pre[class*=language-]{color:#ccc;background:0 0;font-family:Consolas,Monaco,'Andale Mono','Ubuntu Mono',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto}:not(pre)>code[class*=language-],pre[class*=language-]{background:#2d2d2d}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}.token.block-comment,.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#999}.token.punctuation{color:#ccc}.token.attr-name,.token.deleted,.token.namespace,.token.tag{color:#e2777a}.token.function-name{color:#6196cc}.token.boolean,.token.function,.token.number{color:#f08d49}.token.class-name,.token.constant,.token.property,.token.symbol{color:#f8c555}.token.atrule,.token.builtin,.token.important,.token.keyword,.token.selector{color:#cc99cd}.token.attr-value,.token.char,.token.regex,.token.string,.token.variable{color:#7ec699}.token.entity,.token.operator,.token.url{color:#67cdcc}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.token.inserted{color:green}body{background:linear-gradient(90deg,#e3ffe7 0,#d9e7ff 100%)}.container{max-width:900px;padding:0 20px;margin:100px auto}.section--code{background-color:#2d2d2d;color:#fff;border-radius:8px;padding:0 25px;margin:30px 0;box-shadow:0 10px 30px rgba(0,0,0,.3)}.section--code pre{padding-bottom:0}pre{white-space:pre-wrap;word-break:keep-all}.h1{font-size:3rem;text-align:center;color:#186f72}.subtitle{font-size:1.4rem;font-weight:300;line-height:1.5;color:#282828}p{color:#282828;line-height:1.4}.btn{margin-top:30px;padding:13px 30px 15px;font-size:1.4rem;border-radius:6px;outline:0;border:none;color:#fff;background-color:#00f;cursor:pointer}.section--example-helicopter{position:relative;background:linear-gradient(to top,#c0efff,#5ca2ff);box-shadow:0 10px 50px rgba(0,0,0,.3);border-radius:10px;height:600px;display:flex;overflow:hidden}.helicopter{font-size:5rem;transform-origin:top center;margin:auto;pointer-events:none;will-change:transform}.section--example-from-to{position:relative;display:flex;background:linear-gradient(to bottom,#c0efff,#5ca2ff);box-shadow:0 10px 50px rgba(0,0,0,.3);border-radius:10px;height:140px;margin-top:40px;will-change:transform}.sailboat{font-size:5rem;position:absolute;bottom:20px;left:10%;transform-origin:0 50%;width:80%;will-change:transform}.sailboat--inner{position:relative;display:inline-block;transform:translateX(-50%) scaleX(-1)}.section--example-spider{position:relative;display:flex;justify-content:center;height:600px;border-radius:10px;background:radial-gradient(circle at 0 80%,#ff374e 0,#811313 100%);box-shadow:0 10px 50px rgba(0,0,0,.3);overflow:hidden}.spider{position:relative;font-size:5rem;text-shadow:-2.5px 4px 5px rgba(0,0,0,.4),-5px 10px 5px rgba(0,0,0,.2),-7.5px 15px 5px rgba(0,0,0,.1),-10px 20px 10px rgba(0,0,0,.2)}.spider__inner{transform:rotate(180deg)}.spider__thread{position:absolute;bottom:calc(100% - 30px);left:50%;width:1px;height:200vh;z-index:-1;background:linear-gradient(191deg,#cdcdcd 44%,#eee 64%,#909090 79%,#e8e8e8 92%,#7c7c7c 100%)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
